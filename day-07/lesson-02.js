// 반복문

// 앞서 조건문을 이해하기 위해 자바스크립트 인터프리터가 소스 코드를 따라 분기하는 경로를 따라간다 언급했습니다.
// 반복문 경로를 자기 자신 쪽으로 구부려 코드 일부를 반복하는 문이며 루프라고 하기도 합니다.
// 자바스크립트에는 while, do-while, for, for-of(변형인 for-await), for-in 다섯 가지 루프가 있습니다.

// 1. while
// if 문이 자바스크립트의 기본 조건문인 것과 마찬가지로, while 문은 자바스크립트의 기본 루프입니다.

// while (expression) {
//     statement;
// }

// while 문을 실행하면 인터프리터는 먼저 expression을 평가합니다.
// 표현식의 값이 false 같은 값이면 인터프리터는 루프 바디를 건너뛰고 다음 문으로 이동합니다.
// 반면, expression이 true 같은 값이면 인터프리터는 statement를 실행하고,
// 루프 맨 위로 올라가 expression을 평가하길 반복합니다.
// 달리 말하지면 인터프리터는 expression이 true 같은 값인 동안(while) statement를 반복적으로 실행한다고 할 수 있습니다.
// while(true)로 설정하면, 무한 루프를 만들 수 있습니다. => 단, 자바스크립트에서는 정확히 같은 동작을 무한 반복하길 원하지는 않습니다.

let count = 0;

while (count < 10) {
    console.log("현재 count 값: ", count);
    count++;
}

// 위 예제에서 count 변수는 0으로 시작하고 루프 바디를 실행할 때마다 1씩 증가하는 로직입니다.
// 루프를 10회 실행하면 count가 더 이상 10보다 작지 않으므로 표현식은 false로 바뀌고,
// 인터프리터는 while 문을 끝내고 프로그램 다음 문으로 이동합니다.
